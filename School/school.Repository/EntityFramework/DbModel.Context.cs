//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace school.Repository.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SchoolEntities : DbContext
    {
        public SchoolEntities()
            : base("name=SchoolEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<Grade> Grades { get; set; }
        public virtual DbSet<PayTransaction> PayTransactions { get; set; }
        public virtual DbSet<PayTransactionStatusType> PayTransactionStatusTypes { get; set; }
        public virtual DbSet<Period> Periods { get; set; }
        public virtual DbSet<PeriodGrade> PeriodGrades { get; set; }
        public virtual DbSet<PeriodGradeGroup> PeriodGradeGroups { get; set; }
        public virtual DbSet<PeriodGradeStudent> PeriodGradeStudents { get; set; }
        public virtual DbSet<PeriodGradeStudentTranTypeConfiguration> PeriodGradeStudentTranTypeConfigurations { get; set; }
        public virtual DbSet<RunSchedule> RunSchedules { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentPayTransaction> StudentPayTransactions { get; set; }
        public virtual DbSet<StudentPayTransactionStatu> StudentPayTransactionStatus { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
    
        public virtual ObjectResult<proc_Period_GetAll_Result> proc_Period_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Period_GetAll_Result>("proc_Period_GetAll");
        }
    
        public virtual ObjectResult<proc_Gender_GetAll_Result> proc_Gender_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Gender_GetAll_Result>("proc_Gender_GetAll");
        }
    
        public virtual ObjectResult<proc_Grade_StudentDetailByPeriod_Result> proc_Grade_StudentDetailByPeriod(Nullable<int> periodId, Nullable<int> gradeId, string firstName, string lastName, Nullable<int> genderId, string studentCode, Nullable<int> pageIndex, Nullable<int> pageCount, string sortBy, string sortOrder)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("periodId", periodId) :
                new ObjectParameter("periodId", typeof(int));
    
            var gradeIdParameter = gradeId.HasValue ?
                new ObjectParameter("gradeId", gradeId) :
                new ObjectParameter("gradeId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("genderId", genderId) :
                new ObjectParameter("genderId", typeof(int));
    
            var studentCodeParameter = studentCode != null ?
                new ObjectParameter("studentCode", studentCode) :
                new ObjectParameter("studentCode", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageCountParameter = pageCount.HasValue ?
                new ObjectParameter("pageCount", pageCount) :
                new ObjectParameter("pageCount", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("sortBy", sortBy) :
                new ObjectParameter("sortBy", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Grade_StudentDetailByPeriod_Result>("proc_Grade_StudentDetailByPeriod", periodIdParameter, gradeIdParameter, firstNameParameter, lastNameParameter, genderIdParameter, studentCodeParameter, pageIndexParameter, pageCountParameter, sortByParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<proc_Grade_StudentSummaryByPeriod_Result> proc_Grade_StudentSummaryByPeriod(Nullable<int> periodId)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("periodId", periodId) :
                new ObjectParameter("periodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Grade_StudentSummaryByPeriod_Result>("proc_Grade_StudentSummaryByPeriod", periodIdParameter);
        }
    
        public virtual ObjectResult<proc_Period_StudentSummaryByPeriod_Result> proc_Period_StudentSummaryByPeriod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Period_StudentSummaryByPeriod_Result>("proc_Period_StudentSummaryByPeriod");
        }
    
        public virtual ObjectResult<proc_PeriodGrade_GetByPeriod_Result> proc_PeriodGrade_GetByPeriod(Nullable<int> periodId)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("periodId", periodId) :
                new ObjectParameter("periodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_PeriodGrade_GetByPeriod_Result>("proc_PeriodGrade_GetByPeriod", periodIdParameter);
        }
    
        public virtual ObjectResult<proc_PeriodGradeGroup_GetByPeriodGradeId_Result> proc_PeriodGradeGroup_GetByPeriodGradeId(Nullable<int> periodGradeId)
        {
            var periodGradeIdParameter = periodGradeId.HasValue ?
                new ObjectParameter("periodGradeId", periodGradeId) :
                new ObjectParameter("periodGradeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_PeriodGradeGroup_GetByPeriodGradeId_Result>("proc_PeriodGradeGroup_GetByPeriodGradeId", periodGradeIdParameter);
        }
    
        public virtual ObjectResult<proc_Grade_GetAll_Result> proc_Grade_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Grade_GetAll_Result>("proc_Grade_GetAll");
        }
    
        public virtual ObjectResult<proc_Grade_ExpenceSummaryByPeriod_Result> proc_Grade_ExpenceSummaryByPeriod(Nullable<int> periodId)
        {
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("periodId", periodId) :
                new ObjectParameter("periodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Grade_ExpenceSummaryByPeriod_Result>("proc_Grade_ExpenceSummaryByPeriod", periodIdParameter);
        }
    
        public virtual ObjectResult<proc_Student_PaymentAvailable_Result> proc_Student_PaymentAvailable(Nullable<int> periodGradeStudentId)
        {
            var periodGradeStudentIdParameter = periodGradeStudentId.HasValue ?
                new ObjectParameter("periodGradeStudentId", periodGradeStudentId) :
                new ObjectParameter("periodGradeStudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Student_PaymentAvailable_Result>("proc_Student_PaymentAvailable", periodGradeStudentIdParameter);
        }
    
        public virtual int proc_PayTransaction_SubmitPay(Nullable<int> studentPayTransactionId, Nullable<decimal> paymentAmount, Nullable<decimal> balance, Nullable<int> submitById)
        {
            var studentPayTransactionIdParameter = studentPayTransactionId.HasValue ?
                new ObjectParameter("studentPayTransactionId", studentPayTransactionId) :
                new ObjectParameter("studentPayTransactionId", typeof(int));
    
            var paymentAmountParameter = paymentAmount.HasValue ?
                new ObjectParameter("paymentAmount", paymentAmount) :
                new ObjectParameter("paymentAmount", typeof(decimal));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            var submitByIdParameter = submitById.HasValue ?
                new ObjectParameter("submitById", submitById) :
                new ObjectParameter("submitById", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_PayTransaction_SubmitPay", studentPayTransactionIdParameter, paymentAmountParameter, balanceParameter, submitByIdParameter);
        }
    
        public virtual ObjectResult<proc_PayTransaction_GetAll_Result> proc_PayTransaction_GetAll(Nullable<int> periodGradeStudentId)
        {
            var periodGradeStudentIdParameter = periodGradeStudentId.HasValue ?
                new ObjectParameter("periodGradeStudentId", periodGradeStudentId) :
                new ObjectParameter("periodGradeStudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_PayTransaction_GetAll_Result>("proc_PayTransaction_GetAll", periodGradeStudentIdParameter);
        }
    
        public virtual ObjectResult<proc_Student_GetById_Result> proc_Student_GetById(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_Student_GetById_Result>("proc_Student_GetById", studentIdParameter);
        }
    }
}
